{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/apps/desktop/src/components/layout/PageLayout.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport {\n  Stack,\n  Group,\n  Title,\n  Text,\n  Button,\n  ActionIcon,\n  Box,\n  Breadcrumbs,\n  Anchor\n} from '@mantine/core';\nimport { IconArrowLeft, IconHome } from '@tabler/icons-react';\n\ninterface PageLayoutProps {\n  title: string;\n  description?: string;\n  icon?: React.ReactNode;\n  breadcrumbs?: Array<{ label: string; href?: string }>;\n  actions?: React.ReactNode;\n  onBack?: () => void;\n  children: React.ReactNode;\n}\n\nexport const PageLayout: React.FC<PageLayoutProps> = ({\n  title,\n  description,\n  icon,\n  breadcrumbs,\n  actions,\n  onBack,\n  children\n}) => {\n  return (\n    <Stack gap=\"lg\" p=\"md\" h=\"100%\">\n      {/* 面包屑导航 */}\n      {breadcrumbs && breadcrumbs.length > 0 && (\n        <Breadcrumbs separator=\">\">\n          {breadcrumbs.map((crumb, index) => (\n            <Anchor\n              key={index}\n              href={crumb.href}\n              size=\"sm\"\n              c=\"dimmed\"\n              style={{ textDecoration: 'none' }}\n            >\n              {index === 0 && <IconHome size={14} style={{ marginRight: 4 }} />}\n              {crumb.label}\n            </Anchor>\n          ))}\n        </Breadcrumbs>\n      )}\n\n      {/* 页面头部 */}\n      <Group justify=\"space-between\" align=\"flex-start\">\n        <Group align=\"flex-start\">\n          {onBack && (\n            <ActionIcon\n              variant=\"light\"\n              size=\"lg\"\n              onClick={onBack}\n              style={{ marginTop: 4 }}\n            >\n              <IconArrowLeft size={18} />\n            </ActionIcon>\n          )}\n          \n          <Group align=\"flex-start\">\n            {icon && (\n              <Box style={{ marginTop: 2 }}>\n                {icon}\n              </Box>\n            )}\n            <Box>\n              <Title order={2} mb={description ? 4 : 0}>\n                {title}\n              </Title>\n              {description && (\n                <Text c=\"dimmed\" size=\"sm\">\n                  {description}\n                </Text>\n              )}\n            </Box>\n          </Group>\n        </Group>\n        \n        {actions && (\n          <Group>\n            {actions}\n          </Group>\n        )}\n      </Group>\n\n      {/* 页面内容 */}\n      <Box style={{ flex: 1, overflow: 'auto' }}>\n        {children}\n      </Box>\n    </Stack>\n  );\n};"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAdA;;;;AA0BO,MAAM,aAAwC;QAAC,EACpD,KAAK,EACL,WAAW,EACX,IAAI,EACJ,WAAW,EACX,OAAO,EACP,MAAM,EACN,QAAQ,EACT;IACC,qBACE,8VAAC,sZAAA,CAAA,QAAK;QAAC,KAAI;QAAK,GAAE;QAAK,GAAE;;YAEtB,eAAe,YAAY,MAAM,GAAG,mBACnC,8VAAC,kaAAA,CAAA,cAAW;gBAAC,WAAU;0BACpB,YAAY,GAAG,CAAC,CAAC,OAAO,sBACvB,8VAAC,wZAAA,CAAA,SAAM;wBAEL,MAAM,MAAM,IAAI;wBAChB,MAAK;wBACL,GAAE;wBACF,OAAO;4BAAE,gBAAgB;wBAAO;;4BAE/B,UAAU,mBAAK,8VAAC,uTAAA,CAAA,WAAQ;gCAAC,MAAM;gCAAI,OAAO;oCAAE,aAAa;gCAAE;;;;;;4BAC3D,MAAM,KAAK;;uBAPP;;;;;;;;;;0BAcb,8VAAC,sZAAA,CAAA,QAAK;gBAAC,SAAQ;gBAAgB,OAAM;;kCACnC,8VAAC,sZAAA,CAAA,QAAK;wBAAC,OAAM;;4BACV,wBACC,8VAAC,gaAAA,CAAA,aAAU;gCACT,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,OAAO;oCAAE,WAAW;gCAAE;0CAEtB,cAAA,8VAAC,iUAAA,CAAA,gBAAa;oCAAC,MAAM;;;;;;;;;;;0CAIzB,8VAAC,sZAAA,CAAA,QAAK;gCAAC,OAAM;;oCACV,sBACC,8VAAC,4YAAA,CAAA,MAAG;wCAAC,OAAO;4CAAE,WAAW;wCAAE;kDACxB;;;;;;kDAGL,8VAAC,4YAAA,CAAA,MAAG;;0DACF,8VAAC,sZAAA,CAAA,QAAK;gDAAC,OAAO;gDAAG,IAAI,cAAc,IAAI;0DACpC;;;;;;4CAEF,6BACC,8VAAC,oZAAA,CAAA,OAAI;gDAAC,GAAE;gDAAS,MAAK;0DACnB;;;;;;;;;;;;;;;;;;;;;;;;oBAOV,yBACC,8VAAC,sZAAA,CAAA,QAAK;kCACH;;;;;;;;;;;;0BAMP,8VAAC,4YAAA,CAAA,MAAG;gBAAC,OAAO;oBAAE,MAAM;oBAAG,UAAU;gBAAO;0BACrC;;;;;;;;;;;;AAIT;KA3Ea","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/apps/desktop/src/app/templates/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport {\n  Stack,\n  Group,\n  Title,\n  Text,\n  Button,\n  Card,\n  Badge,\n  ActionIcon,\n  Modal,\n  TextInput,\n  Textarea,\n  Select,\n  Paper,\n  Code,\n  Divider,\n  Box,\n  Tabs,\n  Alert\n} from '@mantine/core';\nimport {\n  IconTemplate,\n  IconEdit,\n  IconTrash,\n  IconArrowLeft,\n  IconCopy,\n  IconTestPipe,\n  IconShare,\n  IconDownload,\n  IconInfoCircle,\n  IconCode,\n  IconEye\n} from '@tabler/icons-react';\nimport { notifications } from '@mantine/notifications';\nimport { PageLayout } from '@/components/layout/PageLayout';\n\n// 模拟数据\nconst mockTemplate = {\n  id: '1',\n  title: '文章写作助手',\n  description: '帮助您创作高质量的文章内容，支持多种写作风格和主题',\n  category: '写作',\n  prompt: `请帮我写一篇关于 {主题} 的文章，要求：\n\n1. **结构清晰**：包含引言、主体和结论\n2. **内容深入**：提供有价值的观点和见解\n3. **语言流畅**：易于理解，符合 {目标读者} 的阅读习惯\n4. **字数控制**：约 {字数} 字\n\n写作风格：{写作风格}\n特殊要求：{特殊要求}\n\n请确保文章具有实用性和可读性。`,\n  parameters: [\n    { name: '主题', description: '文章的主要话题', type: 'text', required: true, example: '人工智能的发展趋势' },\n    { name: '目标读者', description: '文章的目标受众', type: 'select', required: true, options: ['普通读者', '专业人士', '学生', '企业管理者'], example: '普通读者' },\n    { name: '字数', description: '文章的大致字数', type: 'number', required: true, example: '1500' },\n    { name: '写作风格', description: '文章的写作风格', type: 'select', required: false, options: ['正式', '轻松', '学术', '新闻'], example: '轻松' },\n    { name: '特殊要求', description: '其他特殊要求', type: 'text', required: false, example: '需要包含实际案例' }\n  ],\n  usage_count: 156,\n  rating: 4.8,\n  is_public: false,\n  local_only: true,\n  created_at: '2024-01-10T08:00:00Z',\n  updated_at: '2024-01-18T14:20:00Z'\n};\n\nexport default function PromptTemplateDetail() {\n  const params = useParams();\n  const router = useRouter();\n  const [template, setTemplate] = useState(mockTemplate);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [testModalOpen, setTestModalOpen] = useState(false);\n  const [paramValues, setParamValues] = useState<Record<string, string>>({});\n  const [generatedPrompt, setGeneratedPrompt] = useState('');\n  const [activeTab, setActiveTab] = useState('overview');\n\n  const handleBack = () => {\n    router.back();\n  };\n\n  const handleEdit = () => {\n    setEditModalOpen(true);\n  };\n\n  const handleDelete = () => {\n    if (confirm('确定要删除这个提示词模板吗？此操作不可恢复！')) {\n      notifications.show({\n        title: '删除成功',\n        message: '提示词模板已删除',\n        color: 'green'\n      });\n      router.push('/');\n    }\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(template.prompt);\n    notifications.show({\n      title: '复制成功',\n      message: '模板内容已复制到剪贴板',\n      color: 'green'\n    });\n  };\n\n  const handleTest = () => {\n    setTestModalOpen(true);\n    // 初始化参数值\n    const initialValues: Record<string, string> = {};\n    template.parameters.forEach(param => {\n      initialValues[param.name] = param.example || '';\n    });\n    setParamValues(initialValues);\n  };\n\n  const generatePrompt = () => {\n    let prompt = template.prompt;\n    template.parameters.forEach(param => {\n      const value = paramValues[param.name] || `{${param.name}}`;\n      prompt = prompt.replace(new RegExp(`{${param.name}}`, 'g'), value);\n    });\n    setGeneratedPrompt(prompt);\n  };\n\n  const handleShare = () => {\n    notifications.show({\n      title: '分享功能',\n      message: '分享功能正在开发中...',\n      color: 'blue'\n    });\n  };\n\n  const handleExport = () => {\n    notifications.show({\n      title: '导出功能',\n      message: '导出功能正在开发中...',\n      color: 'blue'\n    });\n  };\n\n  React.useEffect(() => {\n    generatePrompt();\n  }, [paramValues]);\n\n  return (\n    <PageLayout\n      title={template.title}\n      description={template.description}\n      icon={<IconTemplate size={28} color=\"var(--mantine-color-green-6)\" />}\n      breadcrumbs={[\n        { label: '首页', href: '/' },\n        { label: '提示词模板', href: '/' },\n        { label: template.title }\n      ]}\n      onBack={handleBack}\n      actions={\n        <Group>\n          <Button\n            variant=\"light\"\n            leftSection={<IconTestPipe size={16} />}\n            onClick={handleTest}\n          >\n            测试\n          </Button>\n          <Button\n            variant=\"light\"\n            leftSection={<IconCopy size={16} />}\n            onClick={handleCopy}\n          >\n            复制\n          </Button>\n          <Button\n            variant=\"light\"\n            leftSection={<IconShare size={16} />}\n            onClick={handleShare}\n          >\n            分享\n          </Button>\n          <Button\n            leftSection={<IconEdit size={16} />}\n            onClick={handleEdit}\n          >\n            编辑\n          </Button>\n          <ActionIcon\n            variant=\"light\"\n            color=\"red\"\n            onClick={handleDelete}\n          >\n            <IconTrash size={16} />\n          </ActionIcon>\n        </Group>\n      }\n    >\n      <Stack gap=\"lg\">\n        {/* 模板信息卡片 */}\n        <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n          <Stack gap=\"md\">\n            <Group justify=\"space-between\">\n              <Group>\n                <Badge variant=\"light\" color=\"green\">\n                  {template.category}\n                </Badge>\n                <Badge variant=\"light\" color={template.local_only ? 'orange' : 'blue'}>\n                  {template.local_only ? '本地' : '已同步'}\n                </Badge>\n                {template.is_public && (\n                  <Badge variant=\"light\" color=\"violet\">\n                    公开\n                  </Badge>\n                )}\n              </Group>\n              <Text size=\"sm\" c=\"dimmed\">\n                更新于 {new Date(template.updated_at).toLocaleDateString()}\n              </Text>\n            </Group>\n\n            <Group>\n              <Group gap=\"xs\">\n                <Text size=\"sm\" fw={500}>使用次数:</Text>\n                <Badge variant=\"light\" color=\"blue\">{template.usage_count}</Badge>\n              </Group>\n              <Group gap=\"xs\">\n                <Text size=\"sm\" fw={500}>评分:</Text>\n                <Badge variant=\"light\" color=\"yellow\">⭐ {template.rating}</Badge>\n              </Group>\n            </Group>\n          </Stack>\n        </Card>\n\n        {/* 标签页内容 */}\n        <Tabs value={activeTab} onChange={(value) => setActiveTab(value || 'overview')}>\n          <Tabs.List>\n            <Tabs.Tab value=\"overview\" leftSection={<IconEye size={16} />}>\n              概览\n            </Tabs.Tab>\n            <Tabs.Tab value=\"template\" leftSection={<IconCode size={16} />}>\n              模板内容\n            </Tabs.Tab>\n            <Tabs.Tab value=\"parameters\" leftSection={<IconInfoCircle size={16} />}>\n              参数说明\n            </Tabs.Tab>\n          </Tabs.List>\n\n          <Tabs.Panel value=\"overview\" pt=\"md\">\n            <Stack gap=\"md\">\n              <Alert icon={<IconInfoCircle size={16} />} color=\"blue\" variant=\"light\">\n                <Text size=\"sm\">\n                  这个模板包含 {template.parameters.length} 个参数，\n                  其中 {template.parameters.filter(p => p.required).length} 个是必需的。\n                  点击\"测试\"按钮可以预览生成的提示词。\n                </Text>\n              </Alert>\n\n              <Card shadow=\"sm\" padding=\"md\" radius=\"md\" withBorder>\n                <Title order={4} mb=\"md\">快速预览</Title>\n                <Paper p=\"md\" bg=\"gray.0\" radius=\"md\">\n                  <Code block style={{ whiteSpace: 'pre-wrap', fontSize: '14px' }}>\n                    {template.prompt}\n                  </Code>\n                </Paper>\n              </Card>\n            </Stack>\n          </Tabs.Panel>\n\n          <Tabs.Panel value=\"template\" pt=\"md\">\n            <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n              <Group justify=\"space-between\" mb=\"md\">\n                <Title order={4}>模板内容</Title>\n                <Button\n                  size=\"sm\"\n                  variant=\"light\"\n                  leftSection={<IconCopy size={14} />}\n                  onClick={handleCopy}\n                >\n                  复制\n                </Button>\n              </Group>\n              <Paper p=\"md\" bg=\"gray.0\" radius=\"md\">\n                <Code block style={{ whiteSpace: 'pre-wrap', fontSize: '14px' }}>\n                  {template.prompt}\n                </Code>\n              </Paper>\n            </Card>\n          </Tabs.Panel>\n\n          <Tabs.Panel value=\"parameters\" pt=\"md\">\n            <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n              <Title order={4} mb=\"md\">参数说明</Title>\n              <Stack gap=\"md\">\n                {template.parameters.map((param, index) => (\n                  <Paper key={index} p=\"md\" withBorder radius=\"md\">\n                    <Group justify=\"space-between\" mb=\"sm\">\n                      <Group>\n                        <Text fw={500}>{param.name}</Text>\n                        {param.required && (\n                          <Badge size=\"xs\" color=\"red\" variant=\"light\">必需</Badge>\n                        )}\n                        <Badge size=\"xs\" variant=\"light\">{param.type}</Badge>\n                      </Group>\n                    </Group>\n                    <Text size=\"sm\" c=\"dimmed\" mb=\"sm\">\n                      {param.description}\n                    </Text>\n                    {param.options && (\n                      <Box mb=\"sm\">\n                        <Text size=\"xs\" fw={500} mb=\"xs\">可选值：</Text>\n                        <Group gap=\"xs\">\n                          {param.options.map((option, idx) => (\n                            <Badge key={idx} size=\"xs\" variant=\"outline\">\n                              {option}\n                            </Badge>\n                          ))}\n                        </Group>\n                      </Box>\n                    )}\n                    {param.example && (\n                      <Box>\n                        <Text size=\"xs\" fw={500} mb=\"xs\">示例：</Text>\n                        <Code>{param.example}</Code>\n                      </Box>\n                    )}\n                  </Paper>\n                ))}\n              </Stack>\n            </Card>\n          </Tabs.Panel>\n        </Tabs>\n\n        {/* 测试模态框 */}\n        <Modal\n          opened={testModalOpen}\n          onClose={() => setTestModalOpen(false)}\n          title=\"测试提示词模板\"\n          size=\"xl\"\n        >\n          <Stack gap=\"md\">\n            <Title order={4}>参数设置</Title>\n            <Stack gap=\"sm\">\n              {template.parameters.map((param) => (\n                <Box key={param.name}>\n                  {param.type === 'select' && param.options ? (\n                    <Select\n                      label={\n                        <Group gap=\"xs\">\n                          <Text>{param.name}</Text>\n                          {param.required && <Text c=\"red\">*</Text>}\n                        </Group>\n                      }\n                      description={param.description}\n                      value={paramValues[param.name] || ''}\n                      onChange={(value) => setParamValues(prev => ({ \n                        ...prev, \n                        [param.name]: value || '' \n                      }))}\n                      data={param.options}\n                      placeholder={`选择${param.name}`}\n                    />\n                  ) : param.type === 'number' ? (\n                    <TextInput\n                      label={\n                        <Group gap=\"xs\">\n                          <Text>{param.name}</Text>\n                          {param.required && <Text c=\"red\">*</Text>}\n                        </Group>\n                      }\n                      description={param.description}\n                      type=\"number\"\n                      value={paramValues[param.name] || ''}\n                      onChange={(e) => setParamValues(prev => ({ \n                        ...prev, \n                        [param.name]: e.currentTarget.value \n                      }))}\n                      placeholder={param.example}\n                    />\n                  ) : (\n                    <TextInput\n                      label={\n                        <Group gap=\"xs\">\n                          <Text>{param.name}</Text>\n                          {param.required && <Text c=\"red\">*</Text>}\n                        </Group>\n                      }\n                      description={param.description}\n                      value={paramValues[param.name] || ''}\n                      onChange={(e) => setParamValues(prev => ({ \n                        ...prev, \n                        [param.name]: e.currentTarget.value \n                      }))}\n                      placeholder={param.example}\n                    />\n                  )}\n                </Box>\n              ))}\n            </Stack>\n\n            <Divider />\n\n            <Title order={4}>生成的提示词</Title>\n            <Paper p=\"md\" bg=\"gray.0\" radius=\"md\" mah={300} style={{ overflow: 'auto' }}>\n              <Code block style={{ whiteSpace: 'pre-wrap', fontSize: '14px' }}>\n                {generatedPrompt}\n              </Code>\n            </Paper>\n\n            <Group justify=\"flex-end\">\n              <Button\n                variant=\"light\"\n                leftSection={<IconCopy size={16} />}\n                onClick={() => {\n                  navigator.clipboard.writeText(generatedPrompt);\n                  notifications.show({\n                    title: '复制成功',\n                    message: '生成的提示词已复制到剪贴板',\n                    color: 'green'\n                  });\n                }}\n              >\n                复制提示词\n              </Button>\n              <Button onClick={() => setTestModalOpen(false)}>\n                关闭\n              </Button>\n            </Group>\n          </Stack>\n        </Modal>\n\n        {/* 编辑模态框 */}\n        <Modal\n          opened={editModalOpen}\n          onClose={() => setEditModalOpen(false)}\n          title=\"编辑提示词模板\"\n          size=\"lg\"\n        >\n          <Stack gap=\"md\">\n            <TextInput\n              label=\"模板标题\"\n              value={template.title}\n              onChange={(e) => setTemplate(prev => ({ ...prev, title: e.currentTarget.value }))}\n            />\n            \n            <Textarea\n              label=\"模板描述\"\n              value={template.description}\n              onChange={(e) => setTemplate(prev => ({ ...prev, description: e.currentTarget.value }))}\n              minRows={2}\n            />\n            \n            <Select\n              label=\"分类\"\n              value={template.category}\n              onChange={(value) => setTemplate(prev => ({ ...prev, category: value || '' }))}\n              data={['写作', '编程', '分析', '翻译', '教育', '营销', '其他']}\n            />\n            \n            <Textarea\n              label=\"模板内容\"\n              value={template.prompt}\n              onChange={(e) => setTemplate(prev => ({ ...prev, prompt: e.currentTarget.value }))}\n              minRows={8}\n              description=\"使用 {参数名} 来标记可替换的参数\"\n            />\n            \n            <Group justify=\"flex-end\" mt=\"md\">\n              <Button variant=\"light\" onClick={() => setEditModalOpen(false)}>\n                取消\n              </Button>\n              <Button onClick={() => {\n                setEditModalOpen(false);\n                notifications.show({\n                  title: '保存成功',\n                  message: '提示词模板已更新',\n                  color: 'green'\n                });\n              }}>\n                保存\n              </Button>\n            </Group>\n          </Stack>\n        </Modal>\n      </Stack>\n    </PageLayout>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}