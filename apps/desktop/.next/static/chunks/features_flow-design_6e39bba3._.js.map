{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/flow-design/src/hooks/useFlowDesign.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { FlowDesign } from '@my-platform/types';\n\nexport interface UseFlowDesignOptions {\n  flowId?: string;\n  autoLoad?: boolean;\n}\n\nexport interface UseFlowDesignReturn {\n  flow: FlowDesign | null;\n  flows: FlowDesign[];\n  loading: boolean;\n  error: string | null;\n  createFlow: (flowData: Partial<FlowDesign>) => Promise<FlowDesign>;\n  updateFlow: (flowId: string, updates: Partial<FlowDesign>) => Promise<FlowDesign>;\n  deleteFlow: (flowId: string) => Promise<void>;\n  loadFlow: (flowId: string) => Promise<FlowDesign>;\n  loadFlows: () => Promise<FlowDesign[]>;\n  duplicateFlow: (flowId: string) => Promise<FlowDesign>;\n}\n\nexport const useFlowDesign = (options: UseFlowDesignOptions = {}): UseFlowDesignReturn => {\n  const { flowId, autoLoad = true } = options;\n  \n  const [flow, setFlow] = useState<FlowDesign | null>(null);\n  const [flows, setFlows] = useState<FlowDesign[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (autoLoad) {\n      if (flowId) {\n        loadFlow(flowId);\n      } else {\n        loadFlows();\n      }\n    }\n  }, [flowId, autoLoad]);\n\n  const loadFlow = async (id: string): Promise<FlowDesign> => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(`/api/flows/${id}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setFlow(data.data);\n        return data.data;\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load flow';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadFlows = async (): Promise<FlowDesign[]> => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/flows');\n      const data = await response.json();\n      \n      if (data.success) {\n        setFlows(data.data.items);\n        return data.data.items;\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load flows';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createFlow = async (flowData: Partial<FlowDesign>): Promise<FlowDesign> => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/flows', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(flowData)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        const newFlow = data.data;\n        setFlows(prev => [newFlow, ...prev]);\n        return newFlow;\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create flow';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateFlow = async (id: string, updates: Partial<FlowDesign>): Promise<FlowDesign> => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(`/api/flows/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updates)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        const updatedFlow = data.data;\n        setFlows(prev => prev.map(f => f.id === id ? updatedFlow : f));\n        if (flow?.id === id) {\n          setFlow(updatedFlow);\n        }\n        return updatedFlow;\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update flow';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteFlow = async (id: string): Promise<void> => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(`/api/flows/${id}`, {\n        method: 'DELETE'\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setFlows(prev => prev.filter(f => f.id !== id));\n        if (flow?.id === id) {\n          setFlow(null);\n        }\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to delete flow';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const duplicateFlow = async (id: string): Promise<FlowDesign> => {\n    const originalFlow = flows.find(f => f.id === id) || flow;\n    if (!originalFlow) {\n      throw new Error('Flow not found');\n    }\n\n    const duplicatedFlow = {\n      ...originalFlow,\n      title: `${originalFlow.title} (副本)`,\n      id: undefined, // 让服务器生成新ID\n      createdAt: undefined,\n      updatedAt: undefined\n    };\n\n    return createFlow(duplicatedFlow);\n  };\n\n  return {\n    flow,\n    flows,\n    loading,\n    error,\n    createFlow,\n    updateFlow,\n    deleteFlow,\n    loadFlow,\n    loadFlows,\n    duplicateFlow\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/flow-design/src/components/FlowDesignManager.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Stack,\n  Group,\n  Title,\n  Text,\n  Button,\n  Card,\n  Badge,\n  ActionIcon,\n  Modal,\n  TextInput,\n  Textarea,\n  Select,\n  MultiSelect,\n  Grid,\n  Paper,\n  Loader,\n  Center,\n  Divider,\n  Alert,\n  Box,\n  Timeline,\n  Anchor\n} from '@mantine/core';\nimport {\n  IconRoute,\n  IconPlus,\n  IconEdit,\n  IconTrash,\n  IconEye,\n  IconUpload,\n  IconRobot,\n  IconClock,\n  IconTarget,\n  IconTool,\n  IconExternalLink\n} from '@tabler/icons-react';\nimport { notifications } from '@mantine/notifications';\nimport { FlowDesign, Tag } from '@my-platform/types';\nimport { useFlowDesign } from '../hooks/useFlowDesign';\n// 暂时注释掉PageLayout导入，直接使用Stack布局\n// import { PageLayout } from '../../../apps/desktop/src/components/layout/PageLayout';\n\ninterface FlowDesignManagerProps {\n  onFlowSelect?: (flow: FlowDesign) => void;\n}\n\nexport const FlowDesignManager: React.FC<FlowDesignManagerProps> = ({\n  onFlowSelect\n}) => {\n  const {\n    flows,\n    loading,\n    createFlow,\n    deleteFlow\n  } = useFlowDesign();\n\n  const [selectedFlow, setSelectedFlow] = useState<FlowDesign | null>(null);\n  // 创建改为二级页面路由\n  const [viewModalOpen, setViewModalOpen] = useState(false);\n  \n  // 表单状态\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    difficulty: 'medium' as 'easy' | 'medium' | 'hard',\n\n  });\n  \n  // AI 创建状态\n  const [aiFormData, setAiFormData] = useState({\n    title: '',\n    description: '',\n    goals: '',\n    domain: '',\n    difficulty: 'medium' as 'easy' | 'medium' | 'hard',\n    referenceUrls: ''\n  });\n  const [aiGenerating, setAiGenerating] = useState(false);\n\n  const handleCreateFlow = async () => {\n    try {\n      await createFlow(formData);\n      setCreateModalOpen(false);\n      setFormData({\n        title: '',\n        description: '',\n        difficulty: 'medium',\n\n      });\n      \n      notifications.show({\n        title: '创建成功',\n        message: '流程设计已创建',\n        color: 'green'\n      });\n    } catch (error) {\n      notifications.show({\n        title: '创建失败',\n        message: '无法创建流程设计',\n        color: 'red'\n      });\n    }\n  };\n\n  const handleAICreate = async () => {\n    try {\n      setAiGenerating(true);\n      // TODO: 实现AI创建流程的逻辑\n      await createFlow({\n        title: aiFormData.title,\n        description: aiFormData.description,\n        difficulty: aiFormData.difficulty,\n        article: `# ${aiFormData.title}\\n\\n${aiFormData.description}`,\n        steps: [],\n        tools: [],\n        prerequisites: [],\n        outcomes: []\n      });\n      setAiCreateModalOpen(false);\n      setAiFormData({\n        title: '',\n        description: '',\n        goals: '',\n        domain: '',\n        difficulty: 'medium',\n        referenceUrls: ''\n      });\n      \n      notifications.show({\n        title: 'AI 创建成功',\n        message: '流程设计已通过 AI 辅助创建',\n        color: 'green'\n      });\n    } catch (error) {\n      notifications.show({\n        title: 'AI 创建失败',\n        message: error instanceof Error ? error.message : '无法通过 AI 创建流程设计',\n        color: 'red'\n      });\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'green';\n      case 'medium': return 'yellow';\n      case 'hard': return 'red';\n      default: return 'gray';\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return '简单';\n      case 'medium': return '中等';\n      case 'hard': return '困难';\n      default: return '未知';\n    }\n  };\n\n  if (loading) {\n    return (\n      <Center h={400}>\n        <Stack align=\"center\">\n          <Loader size=\"lg\" />\n          <Text c=\"dimmed\">加载流程设计...</Text>\n        </Stack>\n      </Center>\n    );\n  }\n\n  return (\n    <Stack gap=\"lg\" p=\"md\">\n      {/* 头部操作栏 */}\n      <Group justify=\"space-between\">\n        <Group>\n          <IconRoute size={28} color=\"var(--mantine-color-green-6)\" />\n          <Box>\n            <Title order={2}>流程设计</Title>\n            <Text c=\"dimmed\" size=\"sm\">创建和管理执行流程</Text>\n          </Box>\n        </Group>\n        \n        <Group>\n          <Button\n            leftSection={<IconRobot size={16} />}\n            variant=\"gradient\"\n            gradient={{ from: 'green', to: 'teal' }}\n            onClick={() => { if (typeof window !== 'undefined') window.location.href = '/flows/new?mode=ai' }}\n          >\n            AI 创建\n          </Button>\n          <Button\n            leftSection={<IconPlus size={16} />}\n            onClick={() => { if (typeof window !== 'undefined') window.location.href = '/flows/new' }}\n          >\n            手动创建\n          </Button>\n        </Group>\n      </Group>\n\n      {/* 流程列表 */}\n      {flows.length === 0 ? (\n        <Card shadow=\"sm\" padding=\"xl\" radius=\"md\" withBorder>\n          <Center>\n            <Stack align=\"center\" gap=\"md\">\n              <IconRoute size={64} color=\"var(--mantine-color-gray-5)\" />\n              <Title order={3} ta=\"center\">还没有流程设计</Title>\n              <Text c=\"dimmed\" ta=\"center\" maw={400}>\n                创建您的第一个流程设计来规划和执行复杂任务\n              </Text>\n              <Group>\n                <Button\n                  leftSection={<IconRobot size={16} />}\n                  variant=\"gradient\"\n                  gradient={{ from: 'green', to: 'teal' }}\n                  onClick={() => { if (typeof window !== 'undefined') window.location.href = '/flows/new?mode=ai' }}\n                >\n                  AI 辅助创建\n                </Button>\n                <Button\n                  leftSection={<IconPlus size={16} />}\n                  variant=\"light\"\n                  onClick={() => { if (typeof window !== 'undefined') window.location.href = '/flows/new' }}\n                >\n                  手动创建\n                </Button>\n              </Group>\n            </Stack>\n          </Center>\n        </Card>\n      ) : (\n        <Grid>\n          {flows.map((flow) => (\n            <Grid.Col key={flow.id} span={{ base: 12, md: 6, lg: 4 }}>\n              <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder h=\"100%\">\n                <Stack gap=\"sm\" h=\"100%\">\n                  <Group justify=\"space-between\">\n                    <Badge\n                      variant=\"light\"\n                      color={flow.localOnly ? 'orange' : 'green'}\n                      size=\"sm\"\n                    >\n                      {flow.localOnly ? '本地' : '已同步'}\n                    </Badge>\n                    <Badge\n                      variant=\"light\"\n                      color={getDifficultyColor(flow.difficulty)}\n                      size=\"sm\"\n                    >\n                      {getDifficultyLabel(flow.difficulty)}\n                    </Badge>\n                  </Group>\n\n                  <Box style={{ flex: 1 }}>\n                    <Title order={4} mb=\"xs\">{flow.title}</Title>\n                    <Text size=\"sm\" c=\"dimmed\" mb=\"sm\" lineClamp={2}>\n                      {flow.description}\n                    </Text>\n                    \n                    <Group gap=\"xs\" mb=\"sm\">\n                      {flow.totalTime && (\n                        <Group gap=\"xs\">\n                          <IconClock size={14} />\n                          <Text size=\"xs\" c=\"dimmed\">{flow.totalTime}</Text>\n                        </Group>\n                      )}\n                      {flow.steps && (\n                        <Group gap=\"xs\">\n                          <IconTarget size={14} />\n                          <Text size=\"xs\" c=\"dimmed\">{flow.steps.length} 步骤</Text>\n                        </Group>\n                      )}\n                      {flow.tools && (\n                        <Group gap=\"xs\">\n                          <IconTool size={14} />\n                          <Text size=\"xs\" c=\"dimmed\">{flow.tools.length} 工具</Text>\n                        </Group>\n                      )}\n                    </Group>\n                  </Box>\n\n                  <Divider />\n\n                  <Group justify=\"space-between\">\n                    <Group gap=\"xs\">\n                      <ActionIcon\n                        variant=\"light\"\n                        size=\"sm\"\n                        onClick={() => {\n                          // 导航到详情页面\n                          if (typeof window !== 'undefined') {\n                            window.location.href = `/flows/${flow.id}`;\n                          }\n                        }}\n                      >\n                        <IconEye size={14} />\n                      </ActionIcon>\n                      <ActionIcon\n                        variant=\"light\"\n                        size=\"sm\"\n                        onClick={() => {\n                          // TODO: 编辑功能\n                        }}\n                      >\n                        <IconEdit size={14} />\n                      </ActionIcon>\n                      {flow.localOnly && (\n                        <ActionIcon\n                          variant=\"light\"\n                          color=\"blue\"\n                          size=\"sm\"\n                          onClick={() => {\n                            // TODO: 实现同步到服务器的逻辑\n                            console.log('Sync to server:', flow.id);\n                          }}\n                        >\n                          <IconUpload size={14} />\n                        </ActionIcon>\n                      )}\n                    </Group>\n                    \n                    <ActionIcon\n                      variant=\"light\"\n                      color=\"red\"\n                      size=\"sm\"\n                      onClick={() => deleteFlow(flow.id)}\n                    >\n                      <IconTrash size={14} />\n                    </ActionIcon>\n                  </Group>\n                </Stack>\n              </Card>\n            </Grid.Col>\n          ))}\n        </Grid>\n      )}\n\n      {/* 创建与 AI 创建改为二级页面 /flows/new */}\n\n      {/* 查看详情模态框 */}\n      <Modal\n        opened={viewModalOpen}\n        onClose={() => setViewModalOpen(false)}\n        title={selectedFlow?.title || '流程详情'}\n        size=\"xl\"\n      >\n        {selectedFlow && (\n          <Stack gap=\"md\">\n            <Group>\n              <Badge color={getDifficultyColor(selectedFlow.difficulty)}>\n                {getDifficultyLabel(selectedFlow.difficulty)}\n              </Badge>\n              {selectedFlow.totalTime && (\n                <Badge variant=\"light\">\n                  <Group gap=\"xs\">\n                    <IconClock size={12} />\n                    {selectedFlow.totalTime}\n                  </Group>\n                </Badge>\n              )}\n            </Group>\n            \n            <Text>{selectedFlow.description}</Text>\n            \n            {selectedFlow.article && (\n              <Paper p=\"md\" withBorder>\n                <Text size=\"sm\" style={{ whiteSpace: 'pre-wrap' }}>\n                  {selectedFlow.article}\n                </Text>\n              </Paper>\n            )}\n            \n            {selectedFlow.steps && selectedFlow.steps.length > 0 && (\n              <Box>\n                <Title order={4} mb=\"md\">流程步骤</Title>\n                <Timeline>\n                  {selectedFlow.steps.map((step, index) => (\n                    <Timeline.Item key={index} title={step.title}>\n                      <Text size=\"sm\" c=\"dimmed\">{step.description}</Text>\n                      {step.estimatedTime && (\n                        <Text size=\"xs\" c=\"dimmed\" mt=\"xs\">\n                          预计时间: {step.estimatedTime}\n                        </Text>\n                      )}\n                    </Timeline.Item>\n                  ))}\n                </Timeline>\n              </Box>\n            )}\n          </Stack>\n        )}\n      </Modal>\n    </Stack>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/flow-design/src/components/FlowDesignViewer.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport {\n  Stack,\n  Group,\n  Title,\n  Text,\n  Button,\n  Card,\n  Badge,\n  ActionIcon,\n  Paper,\n  Divider,\n  Box,\n  Timeline,\n  Anchor,\n  Progress,\n  Stepper\n} from '@mantine/core';\nimport {\n  IconRoute,\n  IconClock,\n  IconTarget,\n  IconTool,\n  IconExternalLink,\n  IconCheck,\n  IconArrowRight,\n  IconPlayerPlay,\n  IconPlayerPause,\n  IconRefresh,\n  IconShare\n} from '@tabler/icons-react';\nimport { FlowDesign, FlowStep } from '@my-platform/types';\n\ninterface FlowDesignViewerProps {\n  flow: FlowDesign;\n  onStepComplete?: (stepId: string) => void;\n  onFlowComplete?: () => void;\n  readonly?: boolean;\n}\n\nexport const FlowDesignViewer: React.FC<FlowDesignViewerProps> = ({\n  flow,\n  onStepComplete,\n  onFlowComplete,\n  readonly = false\n}) => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [completedSteps, setCompletedSteps] = useState<Set<string>>(new Set());\n  const [isExecuting, setIsExecuting] = useState(false);\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'green';\n      case 'medium': return 'yellow';\n      case 'hard': return 'red';\n      default: return 'gray';\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return '简单';\n      case 'medium': return '中等';\n      case 'hard': return '困难';\n      default: return '未知';\n    }\n  };\n\n  const handleStepComplete = (step: FlowStep) => {\n    const newCompleted = new Set(completedSteps);\n    newCompleted.add(step.id);\n    setCompletedSteps(newCompleted);\n    \n    onStepComplete?.(step.id);\n    \n    // 自动进入下一步\n    if (activeStep < flow.steps.length - 1) {\n      setActiveStep(activeStep + 1);\n    } else {\n      // 流程完成\n      setIsExecuting(false);\n      onFlowComplete?.();\n    }\n  };\n\n  const getProgress = () => {\n    return (completedSteps.size / flow.steps.length) * 100;\n  };\n\n  return (\n    <Stack gap=\"lg\">\n      {/* 流程头部信息 */}\n      <Paper p=\"lg\" withBorder>\n        <Group justify=\"space-between\" mb=\"md\">\n          <Group>\n            <IconRoute size={32} color=\"var(--mantine-color-teal-6)\" />\n            <Box>\n              <Title order={2}>{flow.title}</Title>\n              <Text c=\"dimmed\">{flow.description}</Text>\n            </Box>\n          </Group>\n          \n          <Group>\n            <Badge color={getDifficultyColor(flow.difficulty)}>\n              {getDifficultyLabel(flow.difficulty)}\n            </Badge>\n            {flow.totalTime && (\n              <Badge variant=\"outline\">\n                <Group gap=\"xs\">\n                  <IconClock size={12} />\n                  {flow.totalTime}\n                </Group>\n              </Badge>\n            )}\n            {!readonly && (\n              <Button\n                leftSection={isExecuting ? <IconPlayerPause size={16} /> : <IconPlayerPlay size={16} />}\n                onClick={() => setIsExecuting(!isExecuting)}\n                variant={isExecuting ? 'light' : 'filled'}\n              >\n                {isExecuting ? '暂停执行' : '开始执行'}\n              </Button>\n            )}\n          </Group>\n        </Group>\n\n        {/* 进度条 */}\n        {!readonly && (\n          <Box>\n            <Group justify=\"space-between\" mb=\"xs\">\n              <Text size=\"sm\" fw={500}>执行进度</Text>\n              <Text size=\"sm\" c=\"dimmed\">\n                {completedSteps.size} / {flow.steps.length} 步骤完成\n              </Text>\n            </Group>\n            <Progress value={getProgress()} size=\"lg\" radius=\"md\" />\n          </Box>\n        )}\n      </Paper>\n\n      {/* 前置条件 */}\n      {flow.prerequisites && flow.prerequisites.length > 0 && (\n        <Card withBorder>\n          <Title order={4} mb=\"md\">前置条件</Title>\n          <Stack gap=\"xs\">\n            {flow.prerequisites.map((prereq, index) => (\n              <Group key={index} gap=\"xs\">\n                <IconCheck size={16} color=\"var(--mantine-color-green-6)\" />\n                <Text size=\"sm\">{prereq}</Text>\n              </Group>\n            ))}\n          </Stack>\n        </Card>\n      )}\n\n      {/* 执行步骤 */}\n      <Card withBorder>\n        <Title order={4} mb=\"md\">执行步骤</Title>\n        \n        {readonly ? (\n          // 只读模式：使用Timeline展示\n          <Timeline active={-1} bulletSize={24} lineWidth={2}>\n            {flow.steps.map((step, index) => (\n              <Timeline.Item\n                key={step.id}\n                bullet={<Text size=\"xs\">{index + 1}</Text>}\n                title={step.title}\n              >\n                <Text size=\"sm\" c=\"dimmed\" mb=\"xs\">\n                  {step.description}\n                </Text>\n                \n                <Group gap=\"xs\" mb=\"sm\">\n                  {step.estimatedTime && (\n                    <Badge size=\"xs\" variant=\"outline\">\n                      预计 {step.estimatedTime}\n                    </Badge>\n                  )}\n                  {step.difficulty && (\n                    <Badge size=\"xs\" color={getDifficultyColor(step.difficulty)}>\n                      {getDifficultyLabel(step.difficulty)}\n                    </Badge>\n                  )}\n                </Group>\n\n                {step.resources && step.resources.length > 0 && (\n                  <Stack gap=\"xs\" mt=\"xs\">\n                    <Text size=\"sm\" fw={500}>相关资源：</Text>\n                    {step.resources.map((resource) => (\n                      <Anchor\n                        key={resource.id}\n                        href={resource.url}\n                        target=\"_blank\"\n                        size=\"sm\"\n                      >\n                        <Group gap=\"xs\">\n                          <IconExternalLink size={12} />\n                          {resource.title}\n                        </Group>\n                      </Anchor>\n                    ))}\n                  </Stack>\n                )}\n\n                {step.questions && step.questions.length > 0 && (\n                  <Box mt=\"sm\">\n                    <Text size=\"sm\" fw={500} mb=\"xs\">检查要点：</Text>\n                    <Stack gap=\"xs\">\n                      {step.questions.map((question, qIndex) => (\n                        <Text key={qIndex} size=\"sm\" c=\"dimmed\">\n                          • {question}\n                        </Text>\n                      ))}\n                    </Stack>\n                  </Box>\n                )}\n              </Timeline.Item>\n            ))}\n          </Timeline>\n        ) : (\n          // 交互模式：使用Stepper展示\n          <Stepper \n            active={activeStep} \n            onStepClick={setActiveStep}\n            allowNextStepsSelect={false}\n          >\n            {flow.steps.map((step, index) => (\n              <Stepper.Step\n                key={step.id}\n                label={`步骤 ${index + 1}`}\n                description={step.title}\n                completedIcon={<IconCheck size={16} />}\n              >\n                <Paper p=\"md\" bg=\"gray.0\" mt=\"md\">\n                  <Stack gap=\"md\">\n                    <Box>\n                      <Title order={5} mb=\"xs\">{step.title}</Title>\n                      <Text size=\"sm\" mb=\"md\">{step.description}</Text>\n                      \n                      <Group gap=\"xs\" mb=\"md\">\n                        {step.estimatedTime && (\n                          <Badge variant=\"outline\">\n                            <Group gap=\"xs\">\n                              <IconClock size={12} />\n                              {step.estimatedTime}\n                            </Group>\n                          </Badge>\n                        )}\n                        {step.difficulty && (\n                          <Badge color={getDifficultyColor(step.difficulty)}>\n                            {getDifficultyLabel(step.difficulty)}\n                          </Badge>\n                        )}\n                      </Group>\n                    </Box>\n\n                    {step.resources && step.resources.length > 0 && (\n                      <Box>\n                        <Text size=\"sm\" fw={500} mb=\"xs\">相关资源：</Text>\n                        <Stack gap=\"xs\">\n                          {step.resources.map((resource) => (\n                            <Anchor\n                              key={resource.id}\n                              href={resource.url}\n                              target=\"_blank\"\n                              size=\"sm\"\n                            >\n                              <Group gap=\"xs\">\n                                <IconExternalLink size={12} />\n                                {resource.title}\n                                {resource.description && (\n                                  <Text size=\"xs\" c=\"dimmed\">\n                                    - {resource.description}\n                                  </Text>\n                                )}\n                              </Group>\n                            </Anchor>\n                          ))}\n                        </Stack>\n                      </Box>\n                    )}\n\n                    {step.questions && step.questions.length > 0 && (\n                      <Box>\n                        <Text size=\"sm\" fw={500} mb=\"xs\">完成检查：</Text>\n                        <Stack gap=\"xs\">\n                          {step.questions.map((question, qIndex) => (\n                            <Text key={qIndex} size=\"sm\">\n                              • {question}\n                            </Text>\n                          ))}\n                        </Stack>\n                      </Box>\n                    )}\n\n                    <Group justify=\"flex-end\">\n                      <Button\n                        leftSection={<IconCheck size={16} />}\n                        onClick={() => handleStepComplete(step)}\n                        disabled={completedSteps.has(step.id)}\n                        variant={completedSteps.has(step.id) ? 'light' : 'filled'}\n                      >\n                        {completedSteps.has(step.id) ? '已完成' : '标记完成'}\n                      </Button>\n                    </Group>\n                  </Stack>\n                </Paper>\n              </Stepper.Step>\n            ))}\n          </Stepper>\n        )}\n      </Card>\n\n      {/* 预期成果 */}\n      {flow.outcomes && flow.outcomes.length > 0 && (\n        <Card withBorder>\n          <Title order={4} mb=\"md\">预期成果</Title>\n          <Stack gap=\"xs\">\n            {flow.outcomes.map((outcome, index) => (\n              <Group key={index} gap=\"xs\">\n                <IconTarget size={16} color=\"var(--mantine-color-blue-6)\" />\n                <Text size=\"sm\">{outcome}</Text>\n              </Group>\n            ))}\n          </Stack>\n        </Card>\n      )}\n\n      {/* 工具清单 */}\n      {flow.tools && flow.tools.length > 0 && (\n        <Card withBorder>\n          <Title order={4} mb=\"md\">推荐工具</Title>\n          <Stack gap=\"sm\">\n            {flow.tools.map((tool) => (\n              <Paper key={tool.id} p=\"sm\" withBorder>\n                <Group justify=\"space-between\">\n                  <Box style={{ flex: 1 }}>\n                    <Group gap=\"xs\" mb=\"xs\">\n                      <IconTool size={16} />\n                      <Text fw={500}>{tool.name}</Text>\n                      <Badge size=\"xs\" variant=\"outline\">\n                        {tool.category}\n                      </Badge>\n                    </Group>\n                    <Text size=\"sm\" c=\"dimmed\">\n                      {tool.description}\n                    </Text>\n                  </Box>\n                  <Anchor href={tool.url} target=\"_blank\">\n                    <ActionIcon variant=\"light\">\n                      <IconExternalLink size={16} />\n                    </ActionIcon>\n                  </Anchor>\n                </Group>\n              </Paper>\n            ))}\n          </Stack>\n        </Card>\n      )}\n    </Stack>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1924, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/flow-design/feature.config.ts"],"sourcesContent":["import { FeatureConfig } from '@my-platform/types';\n\nexport const flowDesignFeature: FeatureConfig = {\n  id: 'flow-design',\n  name: '流程设计',\n  description: '创建和管理结构化的执行流程，支持AI辅助生成',\n  version: '1.0.0',\n  status: 'stable',\n\n  // 桌面应用配置\n  desktop: {\n    enabled: true,\n    menuItems: [\n      {\n        label: '流程设计',\n        path: '/flows',\n        icon: 'IconRoute'\n      }\n    ],\n    shortcuts: [\n      {\n        key: 'cmd+shift+f',\n        action: 'create_flow',\n        description: '创建新流程'\n      }\n    ],\n    routes: [\n      {\n        path: '/flows',\n        component: 'FlowDesignManager',\n        exact: true\n      },\n      {\n        path: '/flows/:id',\n        component: 'FlowDesignViewer',\n        exact: true\n      }\n    ]\n  },\n\n  // 官网展示配置\n  website: {\n    enabled: true,\n    showcase: {\n      title: '流程设计',\n      subtitle: '结构化任务执行',\n      description: '创建详细的执行流程，包含步骤、工具、资源和时间估算，支持AI辅助生成',\n      features: [\n        '步骤化流程设计',\n        'AI辅助创建流程',\n        '工具和资源管理',\n        '时间估算和难度评级',\n        '最佳实践提取',\n        '团队协作分享'\n      ],\n      screenshots: [\n        '/images/features/flow-design-manager.png',\n        '/images/features/flow-design-creator.png',\n        '/images/features/flow-design-viewer.png'\n      ],\n      demoVideo: '/videos/flow-design-demo.mp4'\n    },\n    pricing: {\n      tier: 'pro',\n      features: [\n        '无限流程创建',\n        'AI辅助生成',\n        '团队协作',\n        '高级分析'\n      ]\n    }\n  },\n\n  // API 配置\n  api: {\n    endpoints: [\n      '/api/flows',\n      '/api/flows/:id',\n      '/api/flows/:id/steps',\n      '/api/flows/:id/tools'\n    ],\n    permissions: [\n      'flow:read',\n      'flow:write',\n      'flow:delete',\n      'flow:share'\n    ]\n  },\n\n  // 依赖配置\n  dependencies: {\n    ai: ['openai', 'anthropic', 'pollinations'],\n    ui: ['@mantine/core', '@tabler/icons-react'],\n    core: ['@my-platform/types']\n  }\n};"],"names":[],"mappings":";;;AAEO,MAAM,oBAAmC;IAC9C,IAAI;IACJ,MAAM;IACN,aAAa;IACb,SAAS;IACT,QAAQ;IAER,SAAS;IACT,SAAS;QACP,SAAS;QACT,WAAW;YACT;gBACE,OAAO;gBACP,MAAM;gBACN,MAAM;YACR;SACD;QACD,WAAW;YACT;gBACE,KAAK;gBACL,QAAQ;gBACR,aAAa;YACf;SACD;QACD,QAAQ;YACN;gBACE,MAAM;gBACN,WAAW;gBACX,OAAO;YACT;YACA;gBACE,MAAM;gBACN,WAAW;gBACX,OAAO;YACT;SACD;IACH;IAEA,SAAS;IACT,SAAS;QACP,SAAS;QACT,UAAU;YACR,OAAO;YACP,UAAU;YACV,aAAa;YACb,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,aAAa;gBACX;gBACA;gBACA;aACD;YACD,WAAW;QACb;QACA,SAAS;YACP,MAAM;YACN,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;QACH;IACF;IAEA,SAAS;IACT,KAAK;QACH,WAAW;YACT;YACA;YACA;YACA;SACD;QACD,aAAa;YACX;YACA;YACA;YACA;SACD;IACH;IAEA,OAAO;IACP,cAAc;QACZ,IAAI;YAAC;YAAU;YAAa;SAAe;QAC3C,IAAI;YAAC;YAAiB;SAAsB;QAC5C,MAAM;YAAC;SAAqB;IAC9B;AACF","debugId":null}},
    {"offset": {"line": 2035, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/flow-design/src/index.ts"],"sourcesContent":["// Flow Design Feature - 流程设计功能模块\nexport { FlowDesignManager } from './components/FlowDesignManager';\nexport { FlowDesignViewer } from './components/FlowDesignViewer';\n\n// Types\nexport type {\n  FlowDesign,\n  FlowStep,\n  FlowTool,\n  FlowResource\n} from '@my-platform/types';\n\n// Hooks\nexport { useFlowDesign } from './hooks/useFlowDesign';\n\n// Feature configuration\nexport { flowDesignFeature } from '../feature.config';"],"names":[],"mappings":"AAAA,iCAAiC;;AACjC;AACA;AAUA,QAAQ;AACR;AAEA,wBAAwB;AACxB","debugId":null}}]
}