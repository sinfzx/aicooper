{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/ai-knowledge/src/components/KnowledgeFramework.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  Card,\n  Text,\n  Button,\n  Stack,\n  Group,\n  Select,\n  Badge,\n  Paper,\n  Loader,\n  Alert,\n  ActionIcon,\n  Collapse,\n  Divider,\n  Box,\n  Title\n} from '@mantine/core'\nimport {\n  IconBrain,\n  IconFolder,\n  IconFolderOpen,\n  IconFile,\n  IconRobot,\n  IconEye,\n  IconEyeOff,\n  IconSearch,\n  IconChevronDown,\n  IconChevronRight\n} from '@tabler/icons-react'\nimport { KnowledgeFramework as KnowledgeFrameworkType, KnowledgeNode, SearchProvider } from '@my-platform/types'\nimport { builtInFrameworks } from '@/data/builtInFrameworks'\n\n// Safely import Tauri API with fallback\nconst getTauriInvoke = async () => {\n  try {\n    if (typeof window !== 'undefined' && (window as any).__TAURI__) {\n      const { invoke } = await import('@tauri-apps/api/core');\n      return invoke;\n    }\n  } catch (error) {\n    console.warn('Tauri API not available:', error);\n  }\n  return null;\n};\n\ninterface NodeComponentProps {\n  node: KnowledgeNode\n  onToggleExpand: (nodeId: string) => void\n  onGenerateChildren: (node: KnowledgeNode) => void\n  onSearch: (query: string) => void\n  searchProviders: SearchProvider[]\n}\n\nconst NodeComponent: React.FC<NodeComponentProps> = ({\n  node,\n  onToggleExpand,\n  onGenerateChildren,\n  onSearch,\n  searchProviders\n}) => {\n  const [showQuestions, setShowQuestions] = useState(false)\n\n  const getNodeIcon = () => {\n    if (node.children.length > 0) {\n      return node.expanded ? <IconFolderOpen size={18} /> : <IconFolder size={18} />\n    }\n    return <IconFile size={18} />\n  }\n\n  return (\n    <Box mb=\"md\">\n      <Card shadow=\"sm\" padding=\"md\" radius=\"md\" withBorder>\n        <Group justify=\"space-between\" mb=\"xs\">\n          <Group gap=\"sm\">\n            <ActionIcon\n              variant=\"subtle\"\n              onClick={() => onToggleExpand(node.id)}\n              size=\"sm\"\n            >\n              {getNodeIcon()}\n            </ActionIcon>\n            <Title order={4} size=\"md\">{node.title}</Title>\n          </Group>\n\n          <Group gap=\"xs\">\n            <ActionIcon\n              variant=\"subtle\"\n              onClick={() => setShowQuestions(!showQuestions)}\n              size=\"sm\"\n            >\n              {showQuestions ? <IconEyeOff size={16} /> : <IconEye size={16} />}\n            </ActionIcon>\n            <Button\n              variant=\"light\"\n              size=\"xs\"\n              leftSection={<IconRobot size={14} />}\n              onClick={() => onGenerateChildren(node)}\n            >\n              AI扩展\n            </Button>\n          </Group>\n        </Group>\n\n        {node.description && (\n          <Text size=\"sm\" c=\"dimmed\" mb=\"sm\">\n            {node.description}\n          </Text>\n        )}\n\n        <Collapse in={showQuestions && node.questions.length > 0}>\n          <Paper p=\"sm\" bg=\"gray.0\" radius=\"sm\" mt=\"sm\">\n            <Text size=\"sm\" fw={500} mb=\"xs\">相关问题：</Text>\n            <Stack gap=\"xs\">\n              {node.questions.map((question, index) => (\n                <Group key={index} justify=\"space-between\" align=\"flex-start\">\n                  <Text size=\"sm\" style={{ flex: 1 }}>\n                    • {question}\n                  </Text>\n                  <Group gap=\"xs\">\n                    {searchProviders.filter(p => p.enabled).map(provider => (\n                      <ActionIcon\n                        key={provider.id}\n                        size=\"xs\"\n                        variant=\"light\"\n                        onClick={() => onSearch(`${question} ${node.title}`)}\n                        title={`在${provider.name}中搜索`}\n                      >\n                        <IconSearch size={12} />\n                      </ActionIcon>\n                    ))}\n                  </Group>\n                </Group>\n              ))}\n            </Stack>\n          </Paper>\n        </Collapse>\n      </Card>\n\n      <Collapse in={node.expanded && node.children.length > 0}>\n        <Box ml=\"xl\" pl=\"md\" style={{ borderLeft: '2px solid var(--mantine-color-gray-3)' }}>\n          <Stack gap=\"sm\" mt=\"sm\">\n            {node.children.map(child => (\n              <NodeComponent\n                key={child.id}\n                node={child}\n                onToggleExpand={onToggleExpand}\n                onGenerateChildren={onGenerateChildren}\n                onSearch={onSearch}\n                searchProviders={searchProviders}\n              />\n            ))}\n          </Stack>\n        </Box>\n      </Collapse>\n    </Box>\n  )\n}\n\nexport const KnowledgeFramework: React.FC = () => {\n  const [frameworks, setFrameworks] = useState<KnowledgeFrameworkType[]>([])\n  const [selectedFramework, setSelectedFramework] = useState<KnowledgeFrameworkType | null>(null)\n  const [searchProviders, setSearchProviders] = useState<SearchProvider[]>([])\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  useEffect(() => {\n    loadFrameworks()\n    loadSearchProviders()\n  }, [])\n\n  const loadFrameworks = async () => {\n    try {\n      const invoke = await getTauriInvoke();\n      if (!invoke) {\n        // Fallback to built-in frameworks if Tauri is not available\n        setFrameworks(builtInFrameworks);\n        if (builtInFrameworks.length > 0 && !selectedFramework) {\n          setSelectedFramework(builtInFrameworks[0]);\n        }\n        return;\n      }\n\n      let frameworks = await invoke<KnowledgeFrameworkType[]>('get_knowledge_frameworks')\n\n      // 如果没有框架，初始化内置框架\n      if (frameworks.length === 0) {\n        for (const framework of builtInFrameworks) {\n          await invoke('save_knowledge_framework', { framework })\n        }\n        frameworks = builtInFrameworks\n      }\n\n      setFrameworks(frameworks)\n      if (frameworks.length > 0 && !selectedFramework) {\n        setSelectedFramework(frameworks[0])\n      }\n    } catch (error) {\n      console.error('Failed to load frameworks:', error)\n      // Fallback to built-in frameworks on error\n      setFrameworks(builtInFrameworks);\n      if (builtInFrameworks.length > 0 && !selectedFramework) {\n        setSelectedFramework(builtInFrameworks[0]);\n      }\n    }\n  }\n\n  const loadSearchProviders = async () => {\n    try {\n      const invoke = await getTauriInvoke();\n      if (!invoke) {\n        // Fallback to default search providers\n        const defaultProviders: SearchProvider[] = [\n          {\n            id: 'google',\n            name: 'Google',\n            icon: '🔍',\n            baseUrl: 'https://www.google.com/search',\n            searchParam: 'q',\n            enabled: true\n          }\n        ];\n        setSearchProviders(defaultProviders);\n        return;\n      }\n\n      const providers = await invoke<SearchProvider[]>('get_search_providers')\n      setSearchProviders(providers)\n    } catch (error) {\n      console.error('Failed to load search providers:', error)\n      // Fallback to default providers\n      const defaultProviders: SearchProvider[] = [\n        {\n          id: 'google',\n          name: 'Google',\n          icon: '🔍',\n          baseUrl: 'https://www.google.com/search',\n          searchParam: 'q',\n          enabled: true\n        }\n      ];\n      setSearchProviders(defaultProviders);\n    }\n  }\n\n  const handleToggleExpand = useCallback((nodeId: string) => {\n    if (!selectedFramework) return\n\n    const updateNodeExpansion = (nodes: KnowledgeNode[]): KnowledgeNode[] => {\n      return nodes.map(node => {\n        if (node.id === nodeId) {\n          return { ...node, expanded: !node.expanded }\n        }\n        if (node.children.length > 0) {\n          return { ...node, children: updateNodeExpansion(node.children) }\n        }\n        return node\n      })\n    }\n\n    const updatedFramework = {\n      ...selectedFramework,\n      rootNodes: updateNodeExpansion(selectedFramework.rootNodes),\n      updatedAt: new Date().toISOString()\n    }\n\n    setSelectedFramework(updatedFramework)\n\n    // 保存到本地 (如果Tauri可用)\n    getTauriInvoke().then(invoke => {\n      if (invoke) {\n        invoke('save_knowledge_framework', { framework: updatedFramework })\n          .catch(error => console.error('Failed to save framework:', error));\n      }\n    });\n  }, [selectedFramework])\n\n  const handleGenerateChildren = async (parentNode: KnowledgeNode) => {\n    if (!selectedFramework) return\n\n    setIsGenerating(true)\n    try {\n      const invoke = await getTauriInvoke();\n      if (!invoke) {\n        alert('AI扩展功能需要在桌面应用中使用');\n        return;\n      }\n\n      // 获取用户的 API Key\n      const apiKeys = await invoke<any[]>('get_api_keys')\n      const defaultKey = apiKeys.find(k => k.is_default && k.is_active) || apiKeys[0]\n\n      let response: string\n      if (defaultKey) {\n        response = await invoke<string>('generate_child_nodes', {\n          provider: defaultKey.provider,\n          apiKey: defaultKey.api_key,\n          model: defaultKey.model || 'gpt-3.5-turbo',\n          parentTitle: parentNode.title,\n          parentDescription: parentNode.description || '',\n          domainContext: selectedFramework.domain,\n          nodeCount: 3,\n          targetUser: '进阶学习者',\n          baseUrl: defaultKey.base_url || null\n        })\n      } else {\n        // 使用兜底服务\n        response = await invoke<string>('generate_child_nodes', {\n          provider: 'pollinations',\n          apiKey: '',\n          model: '',\n          parentTitle: parentNode.title,\n          parentDescription: parentNode.description || '',\n          domainContext: selectedFramework.domain,\n          nodeCount: 3,\n          targetUser: '进阶学习者',\n          baseUrl: null\n        })\n      }\n\n      // 解析 AI 响应并创建子节点\n      const childNodes = parseAIResponseToNodes(response, parentNode.level + 1)\n\n      // 更新框架\n      const updateNodeChildren = (nodes: KnowledgeNode[]): KnowledgeNode[] => {\n        return nodes.map(node => {\n          if (node.id === parentNode.id) {\n            return {\n              ...node,\n              children: [...node.children, ...childNodes],\n              expanded: true\n            }\n          }\n          if (node.children.length > 0) {\n            return { ...node, children: updateNodeChildren(node.children) }\n          }\n          return node\n        })\n      }\n\n      const updatedFramework = {\n        ...selectedFramework,\n        rootNodes: updateNodeChildren(selectedFramework.rootNodes),\n        updatedAt: new Date().toISOString()\n      }\n\n      setSelectedFramework(updatedFramework)\n      await invoke('save_knowledge_framework', { framework: updatedFramework })\n\n    } catch (error) {\n      console.error('Failed to generate child nodes:', error)\n      alert(`生成失败: ${error}`)\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  const parseAIResponseToNodes = (response: string, level: number): KnowledgeNode[] => {\n    const nodes: KnowledgeNode[] = []\n    const sections = response.split('---').filter(s => s.trim())\n\n    sections.forEach((section, index) => {\n      const lines = section.trim().split('\\n')\n      let title = ''\n      let description = ''\n      const questions: string[] = []\n\n      for (const line of lines) {\n        if (line.startsWith('## ')) {\n          title = line.replace('## ', '').replace(/节点\\d+：/, '').trim()\n        } else if (line.startsWith('**描述**：')) {\n          description = line.replace('**描述**：', '').trim()\n        } else if (line.match(/^\\d+\\. /)) {\n          questions.push(line.replace(/^\\d+\\. /, '').trim())\n        }\n      }\n\n      if (title) {\n        nodes.push({\n          id: `node-${Date.now()}-${index}`,\n          title,\n          description: description || undefined,\n          children: [],\n          questions,\n          urls: [],\n          expanded: false,\n          level,\n          position: { x: index * 200, y: level * 150 }\n        })\n      }\n    })\n\n    return nodes\n  }\n\n  const handleSearch = async (query: string) => {\n    try {\n      const invoke = await getTauriInvoke();\n      if (!invoke) {\n        // Fallback to direct search URL\n        const enabledProviders = searchProviders.filter(p => p.enabled)\n        if (enabledProviders.length > 0) {\n          const provider = enabledProviders[0];\n          const searchUrl = `${provider.baseUrl}?${provider.searchParam}=${encodeURIComponent(query)}`;\n          window.open(searchUrl, '_blank');\n        }\n        return;\n      }\n\n      const enabledProviders = searchProviders.filter(p => p.enabled)\n      if (enabledProviders.length > 0) {\n        const searchUrl = await invoke<string>('search_with_provider', {\n          providerId: enabledProviders[0].id,\n          query\n        })\n\n        // 使用 Tauri 的 opener 插件打开搜索链接\n        await invoke('plugin:opener|open', { path: searchUrl })\n      }\n    } catch (error) {\n      console.error('Search failed:', error)\n      // Fallback to direct search\n      const enabledProviders = searchProviders.filter(p => p.enabled)\n      if (enabledProviders.length > 0) {\n        const provider = enabledProviders[0];\n        const searchUrl = `${provider.baseUrl}?${provider.searchParam}=${encodeURIComponent(query)}`;\n        window.open(searchUrl, '_blank');\n      }\n    }\n  }\n\n  return (\n    <Stack gap=\"lg\" p=\"md\">\n      <Group justify=\"space-between\">\n        <Stack gap=\"xs\">\n          <Group>\n            <IconBrain size={28} color=\"var(--mantine-color-blue-6)\" />\n            <Title order={2}>知识框架</Title>\n          </Group>\n          <Text c=\"dimmed\">系统性地构建和管理领域知识</Text>\n        </Stack>\n\n        <Select\n          placeholder=\"选择知识框架\"\n          value={selectedFramework?.id || null}\n          onChange={(value) => {\n            const framework = frameworks.find(f => f.id === value)\n            setSelectedFramework(framework || null)\n          }}\n          data={frameworks.map(framework => ({\n            value: framework.id,\n            label: framework.name\n          }))}\n          w={250}\n        />\n      </Group>\n\n      {selectedFramework ? (\n        <Stack gap=\"md\">\n          <Paper p=\"lg\" radius=\"md\" bg=\"blue.0\" withBorder>\n            <Group justify=\"space-between\" mb=\"sm\">\n              <Title order={3} c=\"blue.8\">\n                {selectedFramework.name}\n              </Title>\n              <Group gap=\"xs\">\n                <Badge variant=\"light\" color=\"blue\">\n                  {selectedFramework.domain}\n                </Badge>\n                <Badge variant=\"outline\" size=\"sm\">\n                  v{selectedFramework.version}\n                </Badge>\n              </Group>\n            </Group>\n            <Text c=\"blue.7\">{selectedFramework.description}</Text>\n          </Paper>\n\n          {isGenerating && (\n            <Alert\n              icon={<Loader size={16} />}\n              color=\"yellow\"\n              variant=\"light\"\n              radius=\"md\"\n            >\n              <Text>AI 正在生成新的知识节点...</Text>\n            </Alert>\n          )}\n\n          <Stack gap=\"sm\">\n            {selectedFramework.rootNodes.map(node => (\n              <NodeComponent\n                key={node.id}\n                node={node}\n                onToggleExpand={handleToggleExpand}\n                onGenerateChildren={handleGenerateChildren}\n                onSearch={handleSearch}\n                searchProviders={searchProviders}\n              />\n            ))}\n          </Stack>\n        </Stack>\n      ) : (\n        <Card shadow=\"sm\" padding=\"xl\" radius=\"md\" withBorder>\n          <Stack align=\"center\" gap=\"md\">\n            <IconBrain size={64} color=\"var(--mantine-color-gray-5)\" />\n            <Title order={3} ta=\"center\">选择知识框架</Title>\n            <Text c=\"dimmed\" ta=\"center\" maw={400}>\n              选择一个领域开始构建您的知识体系\n            </Text>\n            {frameworks.length === 0 && (\n              <Button\n                variant=\"filled\"\n                onClick={loadFrameworks}\n                leftSection={<IconBrain size={16} />}\n              >\n                初始化内置框架\n              </Button>\n            )}\n          </Stack>\n        </Card>\n      )}\n    </Stack>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/ai-knowledge/src/components/KnowledgeFrameworkManager.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport {\n    Stack,\n    Group,\n    Title,\n    Text,\n    Button,\n    Card,\n    Badge,\n    ActionIcon,\n    Modal,\n    TextInput,\n    Textarea,\n    Select,\n    Grid,\n    Center,\n    Divider,\n    Box\n} from '@mantine/core';\nimport {\n    IconBrain,\n    IconPlus,\n    IconEdit,\n    IconTrash,\n    IconEye,\n    IconRobot,\n    IconExternalLink\n} from '@tabler/icons-react';\nimport { notifications } from '@mantine/notifications';\n// 暂时注释掉PageLayout导入，直接使用Stack布局\n// import { PageLayout } from '../../../apps/desktop/src/components/layout/PageLayout';\n\n// 临时类型定义，应该从@my-platform/types导入\ninterface KnowledgeFramework {\n    id: string;\n    title: string;\n    description: string;\n    domain: string;\n    version: number;\n    is_built_in: boolean;\n    is_public: boolean;\n    local_only: boolean;\n    created_at: string;\n    updated_at: string;\n}\n\ninterface KnowledgeFrameworkManagerProps {\n    onFrameworkSelect?: (framework: KnowledgeFramework) => void;\n}\n\nexport const KnowledgeFrameworkManager: React.FC<KnowledgeFrameworkManagerProps> = ({\n    onFrameworkSelect\n}) => {\n    const [frameworks, setFrameworks] = useState<KnowledgeFramework[]>([]);\n    const [loading, setLoading] = useState(true);\n    // 创建改为二级页面路由\n    const [selectedFramework, setSelectedFramework] = useState<KnowledgeFramework | null>(null);\n\n    // 表单状态\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        domain: ''\n    });\n\n    // AI 创建状态\n    const [aiFormData, setAiFormData] = useState({\n        title: '',\n        description: '',\n        domain: '',\n        targetUser: '',\n        complexity: 'medium'\n    });\n    const [aiGenerating, setAiGenerating] = useState(false);\n\n    useEffect(() => {\n        loadFrameworks();\n    }, []);\n\n    const loadFrameworks = async () => {\n        try {\n            setLoading(true);\n            // 这里应该调用实际的API或Tauri命令\n            // const frameworks = await dbApi.getKnowledgeFrameworks();\n            // setFrameworks(frameworks.data || []);\n\n            // 临时使用空数组\n            setFrameworks([]);\n        } catch (error) {\n            console.error('Failed to load frameworks:', error);\n            notifications.show({\n                title: '加载失败',\n                message: '无法加载知识框架',\n                color: 'red'\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCreateFramework = async () => {\n        try {\n            // 这里应该调用实际的创建API\n            notifications.show({\n                title: '创建成功',\n                message: '知识框架已创建',\n                color: 'green'\n            });\n            setCreateModalOpen(false);\n            resetFormData();\n            loadFrameworks();\n        } catch (error) {\n            notifications.show({\n                title: '创建失败',\n                message: '无法创建知识框架',\n                color: 'red'\n            });\n        }\n    };\n\n    const handleAICreate = async () => {\n        try {\n            setAiGenerating(true);\n            // 这里应该调用AI创建API\n            notifications.show({\n                title: 'AI 创建成功',\n                message: '知识框架已通过 AI 辅助创建',\n                color: 'green'\n            });\n            setAiCreateModalOpen(false);\n            setAiFormData({\n                title: '',\n                description: '',\n                domain: '',\n                targetUser: '',\n                complexity: 'medium'\n            });\n            loadFrameworks();\n        } catch (error) {\n            notifications.show({\n                title: 'AI 创建失败',\n                message: '无法通过 AI 创建知识框架',\n                color: 'red'\n            });\n        } finally {\n            setAiGenerating(false);\n        }\n    };\n\n    const resetFormData = () => {\n        setFormData({\n            title: '',\n            description: '',\n            domain: ''\n        });\n    };\n\n    if (loading) {\n        return (\n            <Center h={400}>\n                <Stack align=\"center\">\n                    <IconBrain size={64} color=\"var(--mantine-color-gray-5)\" />\n                    <Text c=\"dimmed\">加载知识框架...</Text>\n                </Stack>\n            </Center>\n        );\n    }\n\n    return (\n        <Stack gap=\"lg\" p=\"md\">\n            {/* 头部操作栏 */}\n            <Group justify=\"space-between\">\n                <Group>\n                    <IconBrain size={28} color=\"var(--mantine-color-violet-6)\" />\n                    <Box>\n                        <Title order={2}>知识框架</Title>\n                        <Text c=\"dimmed\" size=\"sm\">创建和管理结构化知识体系</Text>\n                    </Box>\n                </Group>\n\n                <Group>\n                    <Button\n                        leftSection={<IconRobot size={16} />}\n                        variant=\"gradient\"\n                        gradient={{ from: 'violet', to: 'purple' }}\n                        onClick={() => { if (typeof window !== 'undefined') window.location.href = '/knowledge/new?mode=ai' }}\n                    >\n                        AI 创建\n                    </Button>\n                    <Button\n                        leftSection={<IconPlus size={16} />}\n                        onClick={() => { if (typeof window !== 'undefined') window.location.href = '/knowledge/new' }}\n                    >\n                        手动创建\n                    </Button>\n                </Group>\n            </Group>\n\n            {/* 框架列表 */}\n            {frameworks.length === 0 ? (\n                <Card shadow=\"sm\" padding=\"xl\" radius=\"md\" withBorder>\n                    <Center>\n                        <Stack align=\"center\" gap=\"md\">\n                            <IconBrain size={64} color=\"var(--mantine-color-gray-5)\" />\n                            <Title order={3} ta=\"center\">还没有知识框架</Title>\n                            <Text c=\"dimmed\" ta=\"center\" maw={400}>\n                                创建您的第一个知识框架来组织和管理知识体系\n                            </Text>\n                            <Group>\n                                <Button\n                                    leftSection={<IconRobot size={16} />}\n                                    variant=\"gradient\"\n                                    gradient={{ from: 'violet', to: 'purple' }}\n                                    onClick={() => { if (typeof window !== 'undefined') window.location.href = '/knowledge/new?mode=ai' }}\n                                >\n                                    AI 辅助创建\n                                </Button>\n                                <Button\n                                    leftSection={<IconPlus size={16} />}\n                                    variant=\"light\"\n                                    onClick={() => { if (typeof window !== 'undefined') window.location.href = '/knowledge/new' }}\n                                >\n                                    手动创建\n                                </Button>\n                            </Group>\n                        </Stack>\n                    </Center>\n                </Card>\n            ) : (\n                <Grid>\n                    {frameworks.map((framework) => (\n                        <Grid.Col key={framework.id} span={{ base: 12, md: 6, lg: 4 }}>\n                            <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder h=\"100%\">\n                                <Stack gap=\"sm\" h=\"100%\">\n                                    <Group justify=\"space-between\">\n                                        <Badge\n                                            variant=\"light\"\n                                            color={framework.local_only ? 'orange' : 'green'}\n                                            size=\"sm\"\n                                        >\n                                            {framework.local_only ? '本地' : '已同步'}\n                                        </Badge>\n                                        <Badge variant=\"outline\" size=\"xs\">\n                                            {framework.domain}\n                                        </Badge>\n                                    </Group>\n\n                                    <Box style={{ flex: 1 }}>\n                                        <Title order={4} mb=\"xs\">{framework.title}</Title>\n                                        <Text size=\"sm\" c=\"dimmed\" mb=\"sm\" lineClamp={3}>\n                                            {framework.description}\n                                        </Text>\n                                    </Box>\n\n                                    <Divider />\n\n                                    <Group justify=\"space-between\">\n                                        <Group gap=\"xs\">\n                                            <ActionIcon\n                                                variant=\"light\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    // 导航到详情页面\n                                                    if (typeof window !== 'undefined') {\n                                                        window.location.href = `/knowledge/${framework.id}`;\n                                                    }\n                                                }}\n                                            >\n                                                <IconEye size={14} />\n                                            </ActionIcon>\n                                            <ActionIcon\n                                                variant=\"light\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    // 编辑功能\n                                                }}\n                                            >\n                                                <IconEdit size={14} />\n                                            </ActionIcon>\n                                        </Group>\n\n                                        <ActionIcon\n                                            variant=\"light\"\n                                            color=\"red\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                // 删除功能\n                                            }}\n                                        >\n                                            <IconTrash size={14} />\n                                        </ActionIcon>\n                                    </Group>\n                                </Stack>\n                            </Card>\n                        </Grid.Col>\n                    ))}\n                </Grid>\n            )}\n\n            {/* 创建与 AI 创建改为二级页面 /knowledge/new */}\n        </Stack>\n    );\n};"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AA9BA;;;;;;AAoDO,MAAM,4BAAsE,CAAC,EAChF,iBAAiB,EACpB;IACG,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,aAAa;IACb,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAA6B;IAEtF,OAAO;IACP,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,OAAO;QACP,aAAa;QACb,QAAQ;IACZ;IAEA,UAAU;IACV,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;QACzC,OAAO;QACP,aAAa;QACb,QAAQ;QACR,YAAY;QACZ,YAAY;IAChB;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,sWAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG,EAAE;IAEL,MAAM,iBAAiB;QACnB,IAAI;YACA,WAAW;YACX,uBAAuB;YACvB,2DAA2D;YAC3D,wCAAwC;YAExC,UAAU;YACV,cAAc,EAAE;QACpB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,0XAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ,SAAU;YACN,WAAW;QACf;IACJ;IAEA,MAAM,wBAAwB;QAC1B,IAAI;YACA,iBAAiB;YACjB,0XAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;YACA,mBAAmB;YACnB;YACA;QACJ,EAAE,OAAO,OAAO;YACZ,0XAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ;IACJ;IAEA,MAAM,iBAAiB;QACnB,IAAI;YACA,gBAAgB;YAChB,gBAAgB;YAChB,0XAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;YACA,qBAAqB;YACrB,cAAc;gBACV,OAAO;gBACP,aAAa;gBACb,QAAQ;gBACR,YAAY;gBACZ,YAAY;YAChB;YACA;QACJ,EAAE,OAAO,OAAO;YACZ,0XAAA,CAAA,gBAAa,CAAC,IAAI,CAAC;gBACf,OAAO;gBACP,SAAS;gBACT,OAAO;YACX;QACJ,SAAU;YACN,gBAAgB;QACpB;IACJ;IAEA,MAAM,gBAAgB;QAClB,YAAY;YACR,OAAO;YACP,aAAa;YACb,QAAQ;QACZ;IACJ;IAEA,IAAI,SAAS;QACT,qBACI,+YAAC,qZAAA,CAAA,SAAM;YAAC,GAAG;sBACP,cAAA,+YAAC,mZAAA,CAAA,QAAK;gBAAC,OAAM;;kCACT,+YAAC,sTAAA,CAAA,YAAS;wBAAC,MAAM;wBAAI,OAAM;;;;;;kCAC3B,+YAAC,iZAAA,CAAA,OAAI;wBAAC,GAAE;kCAAS;;;;;;;;;;;;;;;;;IAIjC;IAEA,qBACI,+YAAC,mZAAA,CAAA,QAAK;QAAC,KAAI;QAAK,GAAE;;0BAEd,+YAAC,mZAAA,CAAA,QAAK;gBAAC,SAAQ;;kCACX,+YAAC,mZAAA,CAAA,QAAK;;0CACF,+YAAC,sTAAA,CAAA,YAAS;gCAAC,MAAM;gCAAI,OAAM;;;;;;0CAC3B,+YAAC,yYAAA,CAAA,MAAG;;kDACA,+YAAC,mZAAA,CAAA,QAAK;wCAAC,OAAO;kDAAG;;;;;;kDACjB,+YAAC,iZAAA,CAAA,OAAI;wCAAC,GAAE;wCAAS,MAAK;kDAAK;;;;;;;;;;;;;;;;;;kCAInC,+YAAC,mZAAA,CAAA,QAAK;;0CACF,+YAAC,qZAAA,CAAA,SAAM;gCACH,2BAAa,+YAAC,sTAAA,CAAA,YAAS;oCAAC,MAAM;;;;;;gCAC9B,SAAQ;gCACR,UAAU;oCAAE,MAAM;oCAAU,IAAI;gCAAS;gCACzC,SAAS;oCAAQ;;gCAAmF;0CACvG;;;;;;0CAGD,+YAAC,qZAAA,CAAA,SAAM;gCACH,2BAAa,+YAAC,oTAAA,CAAA,WAAQ;oCAAC,MAAM;;;;;;gCAC7B,SAAS;oCAAQ;;gCAA2E;0CAC/F;;;;;;;;;;;;;;;;;;YAOR,WAAW,MAAM,KAAK,kBACnB,+YAAC,iZAAA,CAAA,OAAI;gBAAC,QAAO;gBAAK,SAAQ;gBAAK,QAAO;gBAAK,UAAU;0BACjD,cAAA,+YAAC,qZAAA,CAAA,SAAM;8BACH,cAAA,+YAAC,mZAAA,CAAA,QAAK;wBAAC,OAAM;wBAAS,KAAI;;0CACtB,+YAAC,sTAAA,CAAA,YAAS;gCAAC,MAAM;gCAAI,OAAM;;;;;;0CAC3B,+YAAC,mZAAA,CAAA,QAAK;gCAAC,OAAO;gCAAG,IAAG;0CAAS;;;;;;0CAC7B,+YAAC,iZAAA,CAAA,OAAI;gCAAC,GAAE;gCAAS,IAAG;gCAAS,KAAK;0CAAK;;;;;;0CAGvC,+YAAC,mZAAA,CAAA,QAAK;;kDACF,+YAAC,qZAAA,CAAA,SAAM;wCACH,2BAAa,+YAAC,sTAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;wCAC9B,SAAQ;wCACR,UAAU;4CAAE,MAAM;4CAAU,IAAI;wCAAS;wCACzC,SAAS;4CAAQ;;wCAAmF;kDACvG;;;;;;kDAGD,+YAAC,qZAAA,CAAA,SAAM;wCACH,2BAAa,+YAAC,oTAAA,CAAA,WAAQ;4CAAC,MAAM;;;;;;wCAC7B,SAAQ;wCACR,SAAS;4CAAQ;;wCAA2E;kDAC/F;;;;;;;;;;;;;;;;;;;;;;;;;;;yEAQjB,+YAAC,iZAAA,CAAA,OAAI;0BACA,WAAW,GAAG,CAAC,CAAC,0BACb,+YAAC,iZAAA,CAAA,OAAI,CAAC,GAAG;wBAAoB,MAAM;4BAAE,MAAM;4BAAI,IAAI;4BAAG,IAAI;wBAAE;kCACxD,cAAA,+YAAC,iZAAA,CAAA,OAAI;4BAAC,QAAO;4BAAK,SAAQ;4BAAK,QAAO;4BAAK,UAAU;4BAAC,GAAE;sCACpD,cAAA,+YAAC,mZAAA,CAAA,QAAK;gCAAC,KAAI;gCAAK,GAAE;;kDACd,+YAAC,mZAAA,CAAA,QAAK;wCAAC,SAAQ;;0DACX,+YAAC,mZAAA,CAAA,QAAK;gDACF,SAAQ;gDACR,OAAO,UAAU,UAAU,GAAG,WAAW;gDACzC,MAAK;0DAEJ,UAAU,UAAU,GAAG,OAAO;;;;;;0DAEnC,+YAAC,mZAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAU,MAAK;0DACzB,UAAU,MAAM;;;;;;;;;;;;kDAIzB,+YAAC,yYAAA,CAAA,MAAG;wCAAC,OAAO;4CAAE,MAAM;wCAAE;;0DAClB,+YAAC,mZAAA,CAAA,QAAK;gDAAC,OAAO;gDAAG,IAAG;0DAAM,UAAU,KAAK;;;;;;0DACzC,+YAAC,iZAAA,CAAA,OAAI;gDAAC,MAAK;gDAAK,GAAE;gDAAS,IAAG;gDAAK,WAAW;0DACzC,UAAU,WAAW;;;;;;;;;;;;kDAI9B,+YAAC,uZAAA,CAAA,UAAO;;;;;kDAER,+YAAC,mZAAA,CAAA,QAAK;wCAAC,SAAQ;;0DACX,+YAAC,mZAAA,CAAA,QAAK;gDAAC,KAAI;;kEACP,+YAAC,6ZAAA,CAAA,aAAU;wDACP,SAAQ;wDACR,MAAK;wDACL,SAAS;4DACL,UAAU;4DACV;;wDAGJ;kEAEA,cAAA,+YAAC,kTAAA,CAAA,UAAO;4DAAC,MAAM;;;;;;;;;;;kEAEnB,+YAAC,6ZAAA,CAAA,aAAU;wDACP,SAAQ;wDACR,MAAK;wDACL,SAAS;wDACL,OAAO;wDACX;kEAEA,cAAA,+YAAC,oTAAA,CAAA,WAAQ;4DAAC,MAAM;;;;;;;;;;;;;;;;;0DAIxB,+YAAC,6ZAAA,CAAA,aAAU;gDACP,SAAQ;gDACR,OAAM;gDACN,MAAK;gDACL,SAAS;gDACL,OAAO;gDACX;0DAEA,cAAA,+YAAC,sTAAA,CAAA,YAAS;oDAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA1DtB,UAAU,EAAE;;;;;;;;;;;;;;;;AAuEnD","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/ai-knowledge/src/data/builtInFrameworks.ts"],"sourcesContent":["import { KnowledgeFramework } from '@my-platform/types';\n\nexport const builtInFrameworks: KnowledgeFramework[] = [\n  {\n    id: 'framework-office-efficiency',\n    name: '办公效率',\n    description: '提升工作效率的系统性方法',\n    domain: 'productivity',\n    version: 1,\n    isBuiltIn: true,\n    rootNodes: [\n      {\n        id: 'node-time-management',\n        title: '时间管理',\n        description: '科学管理时间，提高工作效率',\n        children: [],\n        questions: [\n          '如何使用番茄工作法？',\n          '什么是时间块管理？',\n          '如何处理时间碎片？'\n        ],\n        urls: [],\n        expanded: false,\n        level: 0,\n        position: { x: 0, y: 0 }\n      },\n      {\n        id: 'node-communication',\n        title: '沟通技巧',\n        description: '有效沟通的方法和技巧',\n        children: [],\n        questions: [\n          '如何进行有效的会议？',\n          '怎样写出清晰的邮件？',\n          '如何处理工作冲突？'\n        ],\n        urls: [],\n        expanded: false,\n        level: 0,\n        position: { x: 200, y: 0 }\n      }\n    ],\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: 'framework-digital-marketing',\n    name: '数字营销',\n    description: '数字化时代的营销策略和方法',\n    domain: 'marketing',\n    version: 1,\n    isBuiltIn: true,\n    rootNodes: [\n      {\n        id: 'node-content-marketing',\n        title: '内容营销',\n        description: '通过优质内容吸引和转化客户',\n        children: [],\n        questions: [\n          '如何创作吸引人的内容？',\n          '什么是内容营销漏斗？',\n          '如何分发内容？'\n        ],\n        urls: [],\n        expanded: false,\n        level: 0,\n        position: { x: 0, y: 0 }\n      },\n      {\n        id: 'node-seo',\n        title: 'SEO优化',\n        description: '搜索引擎优化的策略和技巧',\n        children: [],\n        questions: [\n          '什么是关键词研究？',\n          '如何优化网站结构？',\n          '怎样建设外链？'\n        ],\n        urls: [],\n        expanded: false,\n        level: 0,\n        position: { x: 200, y: 0 }\n      }\n    ],\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];"],"names":[],"mappings":";;;AAEO,MAAM,oBAA0C;IACrD;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,QAAQ;QACR,SAAS;QACT,WAAW;QACX,WAAW;YACT;gBACE,IAAI;gBACJ,OAAO;gBACP,aAAa;gBACb,UAAU,EAAE;gBACZ,WAAW;oBACT;oBACA;oBACA;iBACD;gBACD,MAAM,EAAE;gBACR,UAAU;gBACV,OAAO;gBACP,UAAU;oBAAE,GAAG;oBAAG,GAAG;gBAAE;YACzB;YACA;gBACE,IAAI;gBACJ,OAAO;gBACP,aAAa;gBACb,UAAU,EAAE;gBACZ,WAAW;oBACT;oBACA;oBACA;iBACD;gBACD,MAAM,EAAE;gBACR,UAAU;gBACV,OAAO;gBACP,UAAU;oBAAE,GAAG;oBAAK,GAAG;gBAAE;YAC3B;SACD;QACD,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;IACnC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,QAAQ;QACR,SAAS;QACT,WAAW;QACX,WAAW;YACT;gBACE,IAAI;gBACJ,OAAO;gBACP,aAAa;gBACb,UAAU,EAAE;gBACZ,WAAW;oBACT;oBACA;oBACA;iBACD;gBACD,MAAM,EAAE;gBACR,UAAU;gBACV,OAAO;gBACP,UAAU;oBAAE,GAAG;oBAAG,GAAG;gBAAE;YACzB;YACA;gBACE,IAAI;gBACJ,OAAO;gBACP,aAAa;gBACb,UAAU,EAAE;gBACZ,WAAW;oBACT;oBACA;oBACA;iBACD;gBACD,MAAM,EAAE;gBACR,UAAU;gBACV,OAAO;gBACP,UAAU;oBAAE,GAAG;oBAAK,GAAG;gBAAE;YAC3B;SACD;QACD,WAAW,IAAI,OAAO,WAAW;QACjC,WAAW,IAAI,OAAO,WAAW;IACnC;CACD","debugId":null}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/ai-knowledge/src/components/KnowledgeFrameworkCreator.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { Stack, Group, TextInput, Textarea, Button, Alert } from '@mantine/core';\nimport { IconRobot } from '@tabler/icons-react';\n\ninterface KnowledgeFrameworkCreatorProps {\n  mode?: 'ai' | 'manual';\n  onCancel?: () => void;\n  onCreated?: () => void;\n}\n\nexport const KnowledgeFrameworkCreator: React.FC<KnowledgeFrameworkCreatorProps> = ({ mode, onCancel, onCreated }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      setSubmitting(true);\n      if (typeof window !== 'undefined' && (window as any).__TAURI__) {\n        const { invoke } = await import('@tauri-apps/api/core');\n        await invoke('create_knowledge_framework', { framework: { title, description } });\n      }\n      onCreated?.();\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Stack gap=\"md\">\n      {mode === 'ai' && (\n        <Alert color=\"blue\" variant=\"light\" icon={<IconRobot size={16} />}>AI 将根据输入自动生成知识框架草案</Alert>\n      )}\n      <TextInput label=\"标题\" placeholder=\"框架标题\" value={title} onChange={(e) => setTitle(e.currentTarget.value)} required />\n      <Textarea label=\"描述\" placeholder=\"简要描述框架\" value={description} onChange={(e) => setDescription(e.currentTarget.value)} minRows={3} required />\n      <Group justify=\"flex-end\">\n        {onCancel && <Button variant=\"light\" onClick={onCancel}>取消</Button>}\n        <Button onClick={handleSubmit} loading={submitting} disabled={!title || !description}>保存</Button>\n      </Group>\n    </Stack>\n  );\n};\n\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAYO,MAAM,4BAAsE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC/G,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe;QACnB,IAAI;YACF,cAAc;YACd;;YAIA;QACF,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE,+YAAC,mZAAA,CAAA,QAAK;QAAC,KAAI;;YACR,SAAS,sBACR,+YAAC,mZAAA,CAAA,QAAK;gBAAC,OAAM;gBAAO,SAAQ;gBAAQ,oBAAM,+YAAC,sTAAA,CAAA,YAAS;oBAAC,MAAM;;;;;;0BAAQ;;;;;;0BAErE,+YAAC,2ZAAA,CAAA,YAAS;gBAAC,OAAM;gBAAK,aAAY;gBAAO,OAAO;gBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,aAAa,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BACjH,+YAAC,yZAAA,CAAA,WAAQ;gBAAC,OAAM;gBAAK,aAAY;gBAAS,OAAO;gBAAa,UAAU,CAAC,IAAM,eAAe,EAAE,aAAa,CAAC,KAAK;gBAAG,SAAS;gBAAG,QAAQ;;;;;;0BAC1I,+YAAC,mZAAA,CAAA,QAAK;gBAAC,SAAQ;;oBACZ,0BAAY,+YAAC,qZAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,SAAS;kCAAU;;;;;;kCACxD,+YAAC,qZAAA,CAAA,SAAM;wBAAC,SAAS;wBAAc,SAAS;wBAAY,UAAU,CAAC,SAAS,CAAC;kCAAa;;;;;;;;;;;;;;;;;;AAI9F","debugId":null}},
    {"offset": {"line": 1611, "column": 0}, "map": {"version":3,"sources":["file:///Users/cavatina/projects/aicooper/features/ai-knowledge/src/index.ts"],"sourcesContent":["export { KnowledgeFramework } from './components/KnowledgeFramework';\nexport { KnowledgeFrameworkManager } from './components/KnowledgeFrameworkManager';\nexport { builtInFrameworks } from './data/builtInFrameworks';\nexport { KnowledgeFrameworkCreator } from './components/KnowledgeFrameworkCreator';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}}]
}